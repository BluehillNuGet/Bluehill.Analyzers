@page "/BH0004ToBH0006"
@page "/BH0004"
@page "/BH0005"
@page "/BH0006"

<h1>BH0004, BH0005, BH0006: Rules related to IXmlSerializable.GetSchema()</h1>

<p>The following rules have a similar purpose: do not use IXmlSerializable.GetSchema(). This method is reserved and should not be used. When implementing the <code>IXmlSerializable</code> interface, you should return null from this method, and instead, if specifying a custom schema is required, apply the <code>XmlSchemaProviderAttribute</code> to the class.</p>

<h2>BH0004: IXmlSerializable.GetSchema() must be explicitly implemented</h2>

<p>IXmlSerializable.GetSchema() must be implemented explicitly.</p>

<h2>BH0005: IXmlSerializable.GetSchema() must return null</h2>

<p>IXmlSerializable.GetSchema() must return null, and must not be abstract or throw exceptions.</p>

<h2>BH0006: Never call IXmlSerializable.GetSchema()</h2>

<p>IXmlSerializable.GetSchema() should never be called.</p>

<h2>Code with violation</h2>

<CodeHighlight>
    public class Class1 : IXmlSerializable {
        public XmlSchema? GetSchema() => new();
        public void ReadXml(XmlReader reader) => throw new NotImplementedException();
        public void WriteXml(XmlWriter writer) => throw new NotImplementedException();

        public XmlSchema? Test() => GetSchema();
    }
</CodeHighlight>

<h2>Fixed Code</h2>

<CodeHighlight>
    public class Class1 : IXmlSerializable {
        XmlSchema? IXmlSerializable.GetSchema() => null;
        public void ReadXml(XmlReader reader) => throw new NotImplementedException();
        public void WriteXml(XmlWriter writer) => throw new NotImplementedException();
    }
</CodeHighlight>
